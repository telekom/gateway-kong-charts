# KEDA ScaledObject Example for Gateway Kong Charts
# This is a reference implementation showing all supported triggers and configuration options

{{- if .Values.kedaAutoscaling.enabled }}
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ .Release.Name }}-scaledobject
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kong.labels" $ | nindent 4 }}
    app.kubernetes.io/name: autoscaling
spec:
  # Target deployment to scale
  scaleTargetRef:
    name: {{ .Release.Name }}
  
  # Replica boundaries
  minReplicaCount: {{ .Values.kedaAutoscaling.minReplicas | default 2 }}
  maxReplicaCount: {{ .Values.kedaAutoscaling.maxReplicas | default 10 }}
  
  # Polling and cooldown configuration
  pollingInterval: {{ .Values.kedaAutoscaling.pollingInterval | default 30 }}
  cooldownPeriod: {{ .Values.kedaAutoscaling.cooldownPeriod | default 300 }}
  
  # Fallback configuration (when all triggers fail)
  {{- if .Values.kedaAutoscaling.fallback.enabled }}
  fallback:
    failureThreshold: 3
    replicas: {{ .Values.kedaAutoscaling.fallback.replicas | default 3 }}
  {{- end }}
  
  # Advanced HPA behavior configuration
  {{- if .Values.kedaAutoscaling.advanced }}
  advanced:
    restoreToOriginalReplicaCount: {{ .Values.kedaAutoscaling.advanced.restoreToOriginalReplicaCount | default false }}
    {{- if .Values.kedaAutoscaling.advanced.horizontalPodAutoscalerConfig }}
    horizontalPodAutoscalerConfig:
      {{- toYaml .Values.kedaAutoscaling.advanced.horizontalPodAutoscalerConfig | nindent 6 }}
    {{- end }}
  {{- end }}
  
  # Scaling triggers
  triggers:
  
  # CPU Resource Scaler
  {{- if .Values.kedaAutoscaling.triggers.cpu.enabled }}
  - type: cpu
    metricType: Utilization
    metadata:
      value: {{ .Values.kedaAutoscaling.triggers.cpu.threshold | default 70 | quote }}
  {{- end }}
  
  # Memory Resource Scaler
  {{- if .Values.kedaAutoscaling.triggers.memory.enabled }}
  - type: memory
    metricType: Utilization
    metadata:
      value: {{ .Values.kedaAutoscaling.triggers.memory.threshold | default 85 | quote }}
  {{- end }}
  
  # Prometheus/Victoria Metrics Scaler
  {{- if .Values.kedaAutoscaling.triggers.prometheus.enabled }}
  - type: prometheus
    metadata:
      serverAddress: {{ required "kedaAutoscaling.triggers.prometheus.serverAddress is required when prometheus trigger is enabled" .Values.kedaAutoscaling.triggers.prometheus.serverAddress }}
      metricName: {{ .Values.kedaAutoscaling.triggers.prometheus.metricName | default "kong_request_rate" }}
      # Query is rendered with Helm template variables
      query: {{ tpl .Values.kedaAutoscaling.triggers.prometheus.query . | quote }}
      threshold: {{ .Values.kedaAutoscaling.triggers.prometheus.threshold | default "100" | quote }}
      {{- if .Values.kedaAutoscaling.triggers.prometheus.activationThreshold }}
      activationThreshold: {{ .Values.kedaAutoscaling.triggers.prometheus.activationThreshold | quote }}
      {{- end }}
      {{- if .Values.kedaAutoscaling.triggers.prometheus.authModes }}
      authModes: {{ .Values.kedaAutoscaling.triggers.prometheus.authModes }}
      {{- end }}
    {{- if .Values.kedaAutoscaling.triggers.prometheus.authentication.clusterTriggerAuthenticationName }}
    authenticationRef:
      name: {{ .Values.kedaAutoscaling.triggers.prometheus.authentication.clusterTriggerAuthenticationName }}
      kind: ClusterTriggerAuthentication
    {{- end }}
  {{- end }}
  
  # Cron-based Scalers (multiple schedules supported)
  {{- if .Values.kedaAutoscaling.triggers.cron.enabled }}
  {{- range .Values.kedaAutoscaling.triggers.cron.schedules }}
  - type: cron
    metadata:
      timezone: {{ $.Values.kedaAutoscaling.triggers.cron.timezone | default "Europe/Berlin" }}
      start: {{ .start | quote }}
      end: {{ .end | quote }}
      desiredReplicas: {{ .desiredReplicas | quote }}
    {{- if .name }}
    name: {{ .name }}
    {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
